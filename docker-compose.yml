version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: task-manager-redis-prod
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Не открываем порт наружу в продакшене
    # ports:
    #   - "6379:6379"

  task-manager:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-app-prod
    restart: always
    ports:
      - "4000:4000"
    environment:
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:///./data/app.db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    volumes:
      - ./data:/app/data
      - app_logs:/app/logs
    depends_on:
      - redis
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-worker-prod
    restart: always
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2
    environment:
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:///./data/app.db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - worker_logs:/app/logs
    depends_on:
      - redis
      - task-manager
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-scheduler-prod
    restart: always
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:///./data/app.db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - beat_logs:/app/logs
    depends_on:
      - redis
      - task-manager
    networks:
      - task-manager-network



networks:
  task-manager-network:
    driver: bridge

volumes:
  redis_data:
  app_logs:
  worker_logs:
  beat_logs: 